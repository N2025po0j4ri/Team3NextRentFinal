/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-08-06 14:30:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import apprepo.Application;
import java.util.ArrayList;

public final class displayApplications_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("apprepo.Application");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Application Repository</title>\r\n");
      out.write("<style>\r\n");
      out.write("        .highlight {\r\n");
      out.write("            background-color: yellow;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("        <script>\r\n");
      out.write("        function highlightText(searchText) {\r\n");
      out.write("            if (!searchText) return;\r\n");
      out.write("\r\n");
      out.write("            // Get all table cells\r\n");
      out.write("            var cells = document.querySelectorAll('table td');\r\n");
      out.write("\r\n");
      out.write("            cells.forEach(function(cell) {\r\n");
      out.write("                var text = cell.innerHTML;\r\n");
      out.write("                var highlightedText = text.replace(new RegExp('(' + searchText + ')', 'gi'), '<span class=\"highlight\">$1</span>');\r\n");
      out.write("                cell.innerHTML = highlightedText;\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        function onSearchButtonClick() {\r\n");
      out.write("            var searchText = document.getElementById('searchInput').value;\r\n");
      out.write("            highlightText(searchText);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <form action=\"FilterServlet\" method=\"post\">\r\n");
      out.write("        <input type=\"text\" name=\"query\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${query}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Filter...\">\r\n");
      out.write("        <input type=\"submit\" value=\"Filter\">\r\n");
      out.write("    </form>    \r\n");
      out.write("    <br/>\r\n");
      out.write("    <form action=\"SortServlet\" method=\"post\">\r\n");
      out.write("    	<input type=\"submit\" value=\"SortByAppName\">\r\n");
      out.write("    </form>\r\n");
      out.write("    <br/>    \r\n");
      out.write("    <!-- Search Form -->\r\n");
      out.write("    <form method=\"get\" action=\"\">\r\n");
      out.write("        <input type=\"text\" id=\"searchInput\" name=\"search\" placeholder=\"Enter search term\" value=\"");
      out.print( request.getParameter("search") );
      out.write("\">\r\n");
      out.write("        <input type=\"button\" value=\"Search\" onclick=\"onSearchButtonClick()\">\r\n");
      out.write("    </form>\r\n");
      out.write("    \r\n");
      out.write("    <br/>\r\n");
      out.write("    \r\n");
      out.write("    <div  align=\"center\" style=\"max-width:1400px; border:2px solid ;\">\r\n");
      out.write("    New Application Form\r\n");
      out.write("    <form action=\"NewAppServlet\" method=\"post\">\r\n");
      out.write("        <table border=\"1\">\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th><input type=\"text\" name=\"name\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${name}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Name\"></th>\r\n");
      out.write("            <th><input type=\"text\" name=\"description\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${description}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Description\"></th>\r\n");
      out.write("            <th><input type=\"text\" name=\"organization\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${organization}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Organization\"></th>\r\n");
      out.write("            <th><input type=\"text\" name=\"platforms\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${platforms}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Platforms\"></th>\r\n");
      out.write("            <th><input type=\"text\" name=\"links\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${links}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Links\"></th>\r\n");
      out.write("            <th><input type=\"text\" name=\"price\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${price}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Price\"></th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("    	<input type=\"submit\" value=\"AddNewApplication\">\r\n");
      out.write("    </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    <h1>Application Repository</h1>\r\n");
      out.write("    <p><a href=\"http://localhost:8082/NextGenRent/NextGenRentServlet\" target=\"_blank\">NextRent home page</a></p>\r\n");
      out.write("    <form method = \"GET\" action = \"NextGenRentServlet\" >\r\n");
      out.write("        \r\n");
      out.write("    <table border=\"1\">\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>Name</th>\r\n");
      out.write("            <th>Description</th>\r\n");
      out.write("            <th>Organization</th>\r\n");
      out.write("            <th>Platforms</th>\r\n");
      out.write("            <th>Links</th>\r\n");
      out.write("            <th>Price</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <p class=\"searchable\"> \r\n");
      out.write("        ");
ArrayList<Application> appList =  
            (ArrayList<Application>)session.getAttribute("applications"); 
        for(Application app:appList){
      out.write("\r\n");
      out.write("     \r\n");
      out.write("            <tr>\r\n");
      out.write("          \r\n");
      out.write("                <td>");
      out.print(app.getName());
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(app.getDescription());
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(app.getOrganization());
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(app.getPlatforms());
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(app.getLinks());
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(app.getPrice());
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("           ");
}
      out.write(" \r\n");
      out.write("        </p>\r\n");
      out.write("    </table>\r\n");
      out.write("    </form>\r\n");
      out.write("        \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
